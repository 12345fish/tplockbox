unit DUnitM.Executive;
// The contents of this unit are dynamically generated by the DUnit-m Wizard.
interface
uses DUnitM.BaseExecutive;

function AcquireExecutive: IExecutive;

implementation


uses System.Classes, DUnitM.ViewModel_Tree, DUnitM.TestSuiteDxVirtualTree,
     System.SysUtils, TPLB3.Random
     , uLockBox_TestCases
     , uLockBox_CipherTestCases
     , uLockBox_Hashes
     , uLockBox_HugeCardinalTestCases
     , uLockBox_OpenSSLTestCases
     , uLockBox_RSA_TestCases
     , uLockBox_Signatory_TestCases
     ;

type
TExecutive = class( TBaseExecutive)
  protected
    procedure RegisterTestFixtures;     override;
    procedure RegisterServices;         override;
    function  ApplicationTitle: string; override;
  end;


function AcquireExecutive: IExecutive;
begin
result := TExecutive.Create
end;

function TExecutive.ApplicationTitle: string;
begin
result := 'DUnit-M Suite Runner: TP Lockbox 3 Unit Test Suite'
end;


procedure TExecutive.RegisterServices;
begin
inherited;
DUnitM.TestSuiteDxVirtualTree.RegisterServices( FServices);
TEncoding.Unicode;
TEncoding.UTF8;
TEncoding.ANSI;
TEncoding.ASCII;
TEncoding.BigEndianUnicode;
TEncoding.UTF7;
TRandomStream.Instance.Randomize
end;


procedure TExecutive.RegisterTestFixtures;
begin
  FModel.RegisterFixtureClass( uLockBox_TestCases.TEnvironment_TestCase);

  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TAES128_RefTestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TAES192_RefTestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TAES256_RefTestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TBase64_TestCases);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TDES_TestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TDES_Reference_TestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.T3DES_Reference_TestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.T3DES_KO1_Reference_TestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TBlowfish_Reference_TestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TTwofish_Reference_TestCase);
  FModel.RegisterFixtureClass( uLockBox_CipherTestCases.TMasBug_TestCase);

  FModel.RegisterFixtureClass( uLockBox_Hashes.TMD5_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA1_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA256_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA224_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA512_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA384_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA512_224_TestCase);
  FModel.RegisterFixtureClass( uLockBox_Hashes.TSHA512_256_TestCase);

  FModel.RegisterFixtureClass( uLockBox_HugeCardinalTestCases.THugeCardinal_TestCase);

  FModel.RegisterFixtureClass( uLockBox_OpenSSLTestCases.TOpenSSL_TestCase);

  FModel.RegisterFixtureClass( uLockBox_RSA_TestCases.TRSA_TestCase);
  FModel.RegisterFixtureClass( uLockBox_RSA_TestCases.TRSA_Crypto_TestCase);

  FModel.RegisterFixtureClass( uLockBox_Signatory_TestCases.TRSASignatory_TestCase);
end;

end.
